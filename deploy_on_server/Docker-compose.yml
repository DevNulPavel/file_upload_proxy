# Шаблон Docker-Compose для запуска на сервере

# Команды для полного перезапуска на сервере
# docker-compose stop && \
# docker-compose rm -f && \
# docker-compose pull && \
# docker-compose up -d

# Команда для вывода всех логов контейнера
# https://docs.docker.com/compose/reference/logs/
#
# docker-compose logs -f -t --tail="all"
#
# test -d logs || mkdir logs && \
# docker-compose logs --tail="all" | \
#     sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" > ./logs/logs_$(date +%Y-%m-%d_%H-%M-%S).log

version: "3.3"
services:
    file_upload_proxy:
        image: devnul/file_upload_proxy:latest
        container_name: file_upload_proxy
        restart: unless-stopped
        volumes:
            - ${PWD}/google_service_account.json:/var/google_service_account.json
        environment:
            - RUST_BACKTRACE=full
            - RUST_LOG=file_upload_proxy=trace,warn
            - UPLOADER_API_TOKEN=?????????????????
            - UPLOADER_GOOGLE_BUCKET_NAME=?????????????????
            - UPLOADER_GOOGLE_CREDENTIALS_FILE=/var/google_service_account.json
            - UPLOADER_PORT=8888
        ports:
            - 8888:8888

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        restart: unless-stopped
        ports:
            - 9090:9090
        volumes:
            - ${PWD}/monitoring_configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--web.external-url=http://localhost:9090'

    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        restart: always
        ports:
            - 3000:3000
        volumes:
            - ${PWD}/monitoring_configs/grafana/data:/var/lib/grafana
            - ${PWD}/monitoring_configs/grafana/provisioning:/etc/grafana/provisioning
        environment:
            GF_SECURITY_ADMIN_USER: admin
            GF_SECURITY_ADMIN_PASSWORD: admin

    alertmanager:
        image: prom/alertmanager:latest
        container_name: alertmanager
        ports:
            - 9093:9093
        volumes:
            - ${PWD}/monitoring_configs/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
        command:
        - '--config.file=/etc/alertmanager/alertmanager.yml'
        - '--web.external-url=http://localhost:9093'

    cadvisor:
        image: gcr.io/cadvisor/cadvisor:latest
        container_name: cadvisor
        restart: always
        ports:
            - '8080:8080'
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro                    
    # network_mode: host